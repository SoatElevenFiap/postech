apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db
  name: db
  namespace: fastfood
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: localhost/fastfood-db:latest
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_USER
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
            failureThreshold: 5
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-persistent-storage
          imagePullPolicy: IfNotPresent
          resources: 
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      restartPolicy: Always
      volumes:
        - name: db-persistent-storage
          persistentVolumeClaim:
            claimName: db-data