version: '3.9'

networks:
  FastFood:
    driver: bridge

services:
  db:
    build:
      context: src/Soat.Eleven.FastFood.Infra/
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}s
      POSTGRES_DB: ${POSTGRES_DB}         
      POSTGRES_USER: ${POSTGRES_USER}     
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
    ports:
      - "5432:5432" 
    volumes:
      - db_data:/var/lib/postgresql/data  
    restart: always
    networks:
      - FastFood
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"] 
      interval: 10s 
      timeout: 5s 
      retries: 5 
      start_period: 10s 
  migrator:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrator
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}     
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} 
      - POSTGRES_DB=${POSTGRES_DB}         
    depends_on:
      - db
    networks:
      - FastFood
    entrypoint: ["sh", "-c", "dotnet ef database update --connection 'Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}' --project src/Soat.Eleven.FastFood.Infra/Soat.Eleven.FastFood.Infra.csproj --startup-project src/Soat.Eleven.FastFood.Api/Soat.Eleven.FastFood.Api.csproj"]

  app:
    build:
      context: ./ 
      dockerfile: Dockerfile
      target: final
    ports:
      - "8080:8080" 
    depends_on:
      - db
      - migrator
    environment: 
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}           
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT} 
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD} # Usa vari√°veis
    networks:
      - FastFood 

volumes:
  db_data: