name: Build and Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:   # ðŸ”¹ Permite executar manualmente pelo GitHub Actions UI

env:
  REGISTRY: yourregistry.azurecr.io
  APP_IMAGE_NAME: myapp
  MIGRATOR_IMAGE_NAME: migrator
  RESOURCE_GROUP: my-resource-group
  CLUSTER_NAME: my-aks-cluster
  NAMESPACE: default

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout do cÃ³digo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Login no Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Login no ACR
      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # 4. Configurar kubectl no AKS
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # 5. Build e push das imagens (sempre sem cache)
      - name: Build and push Docker images (no cache)
        run: |
          echo ">> Buildando aplicaÃ§Ã£o (sem cache)..."
          docker build --no-cache --target final -t $REGISTRY/$APP_IMAGE_NAME:latest .
          docker push $REGISTRY/$APP_IMAGE_NAME:latest
          
          echo ">> Buildando migrator (sem cache)..."
          docker build --no-cache --target migrator -t $REGISTRY/$MIGRATOR_IMAGE_NAME:latest .
          docker push $REGISTRY/$MIGRATOR_IMAGE_NAME:latest

      # 6. Rodar migrator job no AKS
      - name: Run migrator job
        run: |
          kubectl delete job migrator --ignore-not-found -n $NAMESPACE
          cat <<EOF | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: migrator
            namespace: $NAMESPACE
          spec:
            template:
              spec:
                containers:
                - name: migrator
                  image: $REGISTRY/$MIGRATOR_IMAGE_NAME:latest
                restartPolicy: Never
            backoffLimit: 1
          EOF
          kubectl wait --for=condition=complete --timeout=300s job/migrator -n $NAMESPACE

      # 7. Deploy da aplicaÃ§Ã£o no AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/myapp-deployment myapp=$REGISTRY/$APP_IMAGE_NAME:latest -n $NAMESPACE
          kubectl rollout status deployment/myapp-deployment -n $NAMESPACE
