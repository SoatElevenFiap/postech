apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app
  name: app
  namespace: fastfood
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      restartPolicy: Always
      imagePullSecrets: 
        - name: acr-secret
      containers:
        - name: app
          image: "{{ .Values.image.repository }}" 
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            # ... (seus blocos de env e secrets aqui)
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: ASPNETCORE_ENVIRONMENT
            - name: ASPNETCORE_URLS
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: ASPNETCORE_URLS
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: POSTGRES_DB
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: fastfood-config
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PASSWORD
            - name: ConnectionStrings__PostgresConnectionString
              value: "Host=$(POSTGRES_HOST);Port=$(POSTGRES_PORT);Database=$(POSTGRES_DB);Username=$(POSTGRES_USER);Password=$(POSTGRES_PASSWORD);SslMode=Require;TrustServerCertificate=true"
          ports:
            - containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 8
            failureThreshold: 3